---
comment: |
  Templates use Mako to fill in the needed custom details.
  Templates are used as strings with PyGithub.
---
template: installer.first_feature_file
# Make a Scenario for each file the developer wants to test.
# Adds file names as tags on the Scenarios by making the name safe.
content: |
  @interviews_start
  Feature: The interviews run without erroring

  This file:
  [x] Test that each interview starts without an error.
  [x] Contains some additional example Steps. They use fake values and are commented out with a "#" so they won't run.

  These tests are made to work with the ALKiln testing framework, an automated testing framework made under the Document Assembly Line Project.
  
  Want to disable the tests? Want to learn more? See ALKiln's docs: https://suffolklitlab.github.io/docassemble-AssemblyLine-documentation/docs/automated_integrated_testing

  % for file_name in installer.test_files_wanted:
  @${ re.sub( r'[^A-Za-z09]+', '' , re.sub( r'\.yml', '', file_name )) }
  Scenario: ${ file_name } runs
    Given I start the interview at "${ file_name }"
    #And the maximum seconds for each Step in this Scenario is 50
    #And I get to the question id "downloads" with this data:
    #  | var | value | trigger |
    #  | users[0].name.first | Uli | users[0].name.first |
    #  | users[0].name.last | User1 | users[0].name.first |
    
  % endfor
---
comment: |
  The setup interview adds this file (run through mako) to the repo during GitHub test setup.
  This is the workflow file that will trigger GitHub ALKiln tests for the repo.
  It can be called something like "run_form_tests.yml".
  If you're creating this file manually, make sure to adjust the contents to so that it's no longer using Mako.
  That is, replace things like `"${ '${{' } secrets.SERVER_URL ${ '}}' }"` with `"${{ secrets.SERVER_URL }}"`.
template: installer.run_form_tests
content: |
  name: ALKiln v5 tests
  
  on:
    push:
    workflow_dispatch:
      inputs:
        tags:
          description: 'Optional. Use a "tag expression" specify which tagged tests to run. See https://cucumber.io/docs/cucumber/api/#tag-expressions for syntax.'
          default: ''
    # To run your tests on a schedule, delete the first "#" symbol at the beginning of each line below.
    ## Also see https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    ## Also see https://crontab.guru/examples.html
    #schedule:
    #  - cron: '0 1 * * TUE'

  jobs:

    interview-testing:
      runs-on: ubuntu-latest
      name: Run interview tests
      steps:
        - uses: actions/checkout@v3
        - name: Use ALKiln to run tests
          uses: SuffolkLITLab/ALKiln@v5
          with:
            SERVER_URL: "${ '${{' } secrets.SERVER_URL ${ '}}' }"
            DOCASSEMBLE_DEVELOPER_API_KEY: "${ '${{' } secrets.DOCASSEMBLE_DEVELOPER_API_KEY ${ '}}' }"
        - run: echo "Finished running ALKiln tests"
        
        ## To make a new issue in your repository when a test fails,
        ## simply delete the first "#" symbol in each line below
        #- name: If any tests failed create an issue
        #  if: ${ '${{' } failure() }}
        #  uses: actions-ecosystem/action-create-issue@v1
        #  with:
        #    github_token: "${ '${{' } secrets.github_token ${ '}}' }"
        #    title: ALKiln tests failed
        #    body: |
        #      An ALKiln test failed. See the action at ${ '${{' } github.server_url ${ '}}' }/${ '${{' } github.repository ${ '}}' }/actions/runs/${ '${{' } github.run_id ${ '}}' }.
        #    labels: |
        #      bug
        
---
